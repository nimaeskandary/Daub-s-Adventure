{"changed":true,"filter":false,"title":"fble API","tooltip":"/fble API","value":"*FBLE (Game,Desktop,Sidescroller,Typewriter):\n - Game has more universal functions that can be used in every stage of the game\n - Desktop is a mode of the game in which the player is on the desktop of a computer, has some of its own functions to operate\n - Sidescroller is mode of the game in which the player is investigating directories and fighting malware\n - Typewriter is the dialogue box system\n\n*GAME:\n\naddScore            increment the game score\ncallBack            the main callback handler; a loop that's called every 15 milliseconds\nchangeState         change between desktop sidescroller and reading\ngetLevel            returns the current level\ngetPlayerSC         returns the players step count, used to cycle through animations\ngetScore            returns the players score\ngetSprite           returns a specific sprite\ngetState            returns the state of the game\ngetStory            returns what story element the player is on\ninput               keytracker\nmusic               changes background music or plays sound effect\nnextLevel           increments level\nsetPlayerSC         sets the players step count\nsetSprites          sets the sprites from the spritesheet.png\nsetStory            sets the story elements\n\n*DESKTOP:\n\nanimatePlayerD      animates the player as he walks\ncallBackD           callback loop for desktop\ncollisionD          icon collisions\nmakeDesktop         makes a desktop stage for a specefic level\nmovePlayerD         moves the player\ncheckTime           checks the time for the realtime clock\nstartTime           starts the realtime clock on the desktop\n\n*SIDESCROLLER: (World,Player,Enemies)\n>World : section that has functions for the mechanics of the sidescroller world such as map movement\n\ncallBackS           loop thats called when you're in the sidescoller mode of the game       \ncutScene            cutScene that goes from desktop to sidescroller\ncreateWorld         chooses random maps for the level\ngameOver            goes to a new screen when dead and gives restart options\ngetMapAnimations    numbers in map arrays refer different tile animations\ngetMapArray         returns the map array without numbers that refer to enemies because another function adds those\nmakeBars            adds health, ammo, and progess bars along with score\nfillBars            changes the fill of bars\nmakeSidescroller    makes the sidescroller stage for a given level\nremoveBars          removes the bars when not in sidescroller mode\nscroll              scrolls map, enemies, and all other actors to simulate movement\ncType               object that has class names for different map actors\ncheckColloions      checks to see if an actor is colliding with other specefic actors\nisValid             checks to see if an actor movement is valid (if there is something obstructing where an actor wants to go it will return false)\n\n>Player : has specefic functions for DAUB actor\n\nanimateplayerS      animates the player as he walks \ninteractionCheck    goes through possible collisions of DAUB, like ammo boxes or enemies\ndiscmovement        moves the players discs across the map and handles what happens when they collide \ngravity             makes the player fall\njump                makes the player jump\ninjuryJump          player gets a little kickback and turns red when hit\nmovePlayerS         moves the player when a and d are pressed\nplayerShoot         shoots discs when space is pressed\n\n>Enemies : specefic functions that are used for enemy actors\n\nenemyObject         object that every enemy has, contains level, stepcount, direction, and health\nenemyArray          array that hold all enemies\naddEnemies          uses the mapArray and adds enemies to the map based off where their reference numbers appear on the array\nanimateEnemies      animates enemies as they walks\nenemyAI             handles enemy movement and changes their direction when they walk towards a wall or ledge\nbossProjectileLaunch    shoots the boss' projectiles\nbossProjectileMovement  moves the boss' projectiles and handles their collisions\n\n*TYPEWRITER:\n\nadvanceText         advances the text on the dialogue box\ncallBackR           callback loop for when the player is reading\ndialogue            starts the dialogue box and story\ngetText             get the text to be written \nsetText             set the text to be written\nnpc                 floating heads are above the dialogue box, and change color depending on who is speaking\ntext                text object that holds 4 lines of text, if an icon triggered it(means player can investigate), and the color","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":52,"column":47},"end":{"row":52,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430583547000}